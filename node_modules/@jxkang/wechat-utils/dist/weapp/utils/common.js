/* eslint-disable */
const G = window;
const class2type = {};
const extend = function () {
  const hasOwn = class2type.hasOwnProperty;
  const fnToString = hasOwn.toString;
  const getProto = Object.getPrototypeOf;
  const ObjectFunctionString = fnToString.call(Object);
  const isPlainObject = function (obj) {
    let proto; let
      Ctor; if (!obj || toString.call(obj) !== '[object Object]') { return false; } proto = getProto(obj); if (!proto) { return true; } Ctor = hasOwn.call(proto, 'constructor') && proto.constructor; return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;
  };
  let a; let b; let c; let d; let e; let f; let g = arguments[0] || {}; let h = 1; const i = arguments.length; let
    j = !1; for (typeof g == 'boolean' && (j = g, g = arguments[h] || {}, h++), typeof g == 'object' || isFunction(g) || (g = {}), h === i && (g = this, h--); h < i; h++) if ((a = arguments[h]) != null) for (b in a) c = g[b], d = a[b], g !== d && (j && d && (isPlainObject(d) || (e = Array.isArray(d))) ? (e ? (e = !1, f = c && Array.isArray(c) ? c : []) : f = c && isPlainObject(c) ? c : {}, g[b] = extend(j, f, d)) : void 0 !== d && (g[b] = d)); return g;
};
const noop = () => {}

class Common {
  isType = (d, t) => {
    return t && typeof t === 'string' ? class2type.toString.call(d) === `[object ${t.replace(/^(\w)/, (a) => { return a.toUpperCase(); })}]` : class2type.toString.call(d).replace(/.+(?=\s)\s|]/g, '');
  }

  extend = (...args) => {
    return extend(...args);
  }

  clone = data => {
    if (this.isType(data, 'array')) {
      return extend(true, {}, { data }).data;
    } else if (this.isType(data, 'object')) {
      return extend(true, {}, data);
    }
    return data
  }

  getCookie = (cName) => {
    const reg = new RegExp(`${cName}=([^$;]*)`);
    const result = reg.exec(document.cookie);
    return result && result.length ? unescape(result[1]) : result;
  }

  setCookie = ({ key, value, expire, domain, path = '/' } = {}) => {
    if (!this.isType(key, 'undefined') && !this.isType(value, 'undefined')) {
      let cookie = `${key}=${escape(value)};`;
      if (domain && this.isType(key, 'string')) {
        cookie += ` domain=${domain};`;
      }
      if (expire) {
        const exp = new Date();
        exp.setTime(exp.getTime() + expire * 60 * 1000);
        cookie += ` expires=${exp.toGMTString()};`;
      }
      cookie += ` path=${path}`;
      document.cookie = cookie;
    } else {
      console.warn('key,value参数必传');
    }
  }

  delCookie = (key) => {
    const exp = new Date('1970-01-01');
    const value = this.getCookie(key);
    if (value) {
      document.cookie = `${key}=${escape(value)}; expires=${exp.toGMTString()}`;
    }
  }

  // 获取url参数
  getUrlParams = (key) => {
    const reg = new RegExp(`${key}=([^&$]+)`);
    const ret = reg.exec(G.location.search);
    return ret && ret[1];
  }

  moneyFormat = (n) => n && n.toLocaleString()

  dateFormat = (date, t) => { if(typeof t === 'undefined'){t = 'yyyy-mm-dd'}; if (typeof date === 'string' && typeof t === 'undefined') { t = date; date = new Date; } else if (/^\d+$/.test(`${date}`)) { date = new Date(+date) } else if (date && class2type.toString.call(date) !== '[object Date]') { date = new Date(date) };if(this.isType(date)!=='Date'){return date};var e = { "m+": date.getMonth() + 1, "d+": date.getDate(), "h+": date.getHours(), "i+": date.getMinutes(), "s+": date.getSeconds(), "q+": Math.floor((date.getMonth() + 3) / 3), S: date.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length))); for (var i in e) new RegExp("(" + i + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? e[i] : ("00" + e[i]).substr(("" + e[i]).length))); return t }

  download = (data, fileName, type) => {
    if (!data) { return false; }
    const types = {
      excel: 'application/vnd.ms-excel'
    };
    const ndata = new Blob([data], { type: this.isType(type, 'undefined') ? 'text/plain' : types[type] || type });
    const oa = document.createElement('a');
    oa.download = fileName || '未命名文件';
    oa.style.display = 'none';
    oa.href = this.isType(data, 'string') && (data.indexOf('//') > -1 || data.indexOf('/') === 0) ? data : URL.createObjectURL(ndata);
    document.body.appendChild(oa);
    oa.click();
    setTimeout(() => {
      document.body.removeChild(oa);
    });
  }

  seek = () => {
    const result = [];
    const isFunc = v => this.isType(v, 'function');
    return {
      equal(expression, target){
        if(isFunc(expression)) expression = expression();
        if(expression){
          result.push(target);
        }
        return this;
      }, else(target, expression=true){
        if(isFunc(expression)) expression = expression();
        if(expression){
          result.push(target);
        }
        return this;
      }, get(once=true){
        return once ? result.shift() : result;
      }
    }
  }

  getUrlName = (url) => {
    url = `${url}`;
    return (url.match(/\/([^\/]+)$/,'g')||[])[1];
  }

  // 金额保留N位有效小数
  moneyfixed = (n, decimal=2, least) => {
    const vnc = `${n}`.replace(/-?\d+\.?/, '');
    const n2 = Number(n);
    const nn = 1e-14;

    if (n2.toFixed && n2 === n2) {
      if (least === true) {
        if (vnc.length < decimal) {
          return (n2+nn).toFixed(decimal);
        } else {
          return n;
        }
      }
      return (n2+nn).toFixed(decimal);
    }
    return n;
  }

  // 保留两位有效小数 一般运用于金额显示   least为true至少两位有效小数
  money2fixed = (n, least) => {
    return this.moneyfixed(n, 2, least);
  }

  amountFormat = (n)=>{
    const money = `${n}`;
    return /\d/.test(money) ? money.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") : n;
  }

  /**
   * 复制文案
   */
  copyText = (text) => {
    const el = document.createElement('textarea');
    el.value = text;
    el.style = 'position:fixed;width:1px;height:1px;left:-100px;top:-100px;opacity:0';
    G.document.body.appendChild(el);

    el.select();
    el.setSelectionRange(0, text.length); // 兼容其它浏览器
    G.document.execCommand('Copy');
    setTimeout(()=>{
      G.document.body.removeChild(el);
    },10);
  }

  /**
   * 获取url所有参数
   */
  getRequest = (urlQuery=G.location.search) => {
    if(urlQuery.indexOf('//')>-1){
      urlQuery = urlQuery.replace(/[^?]+\?/,'?');
    }
    urlQuery = urlQuery.slice(1);
    const result = {};
    const kvs = urlQuery.split('&');
    kvs.forEach(function(item){
      const paramsItems = item.split('=');
      result[paramsItems[0]] = paramsItems[1];
    });
    return result;
  }

  /**
   * 拼接参数字符串
   */
  queryString = (params) => {
    if (G && G.URLSearchParams) {
      return new G.URLSearchParams(params).toString();
    }
  
    let result = '';
    const encode = function (v) {
      return typeof v === 'string' ? v.replace(/\&/gm, '%26').replace(/\?/gm, '%3F') : v;
    };
    Object.keys(params).forEach((v) => {
      result += `&${v}=${encode(params[v])}`;
    });
    return result.slice(1);
  }

  /**
   * 轮询调用
   */
  pollQuery = ({
    func,
    interval=1000,
    execCount=1
  }) => {
    let loopCount = 0;
    if(this.isType(func, 'function')){
      const loop = function(){
        loopCount += 1;
        const ret = func();
        if((execCount===-1 || loopCount<=execCount) && ret!==false){
          setTimeout(function(){
            loop();
          },interval);
        }
      }
      loop();
    }
  }

  /**
   * 类似open方法 新打开一个tab界面
   */
  winOpen = ({
    url,
    params,
    type='get',
    target='_blank',
    getEle=noop
  }) => {
    const wraper = G.document.createElement('div');
    const myform = G.document.createElement('form');
    const ifm = G.document.createElement('iframe');
    
    myform.method = type;
    myform.action = url;
    
    wraper.style='position:fixed;left:-100px;top:-100px;opacity:0;width:1px;height:1px;overflow:hidden;';
    
    const ifmName = `ifm_${Date.now()}_${Math.ceil(Math.random()*1000)}`;
    ifm.name = ifmName;

    if(target){
      myform.target = target==='ifm' ? ifmName : target;
    }

    // 添加 input hidden
    function appendInput(data, fel){
      Object.keys(data).forEach(item => {
        const itemEl = G.document.createElement('input');
        itemEl.type = 'hidden';
        itemEl.name = item;
        itemEl.value = data[item];
        fel.appendChild(itemEl);
      });
    }

    if(type.toLowerCase()==='get'){
      const getParams = this.getRequest(url);
      appendInput(getParams, myform);
    }

    if(this.isType(params,'object')){
      appendInput(params, myform);
    }

    wraper.appendChild(myform);
    wraper.appendChild(ifm);

    G.document.body.appendChild(wraper);

    getEle(wraper);

    setTimeout(()=>{
      myform.submit();
    });
    setTimeout(()=>{
      G.document.body.removeChild(wraper);
    },1500);
    
  }

}

export default new Common();
