/**
 * @Author: 谭生虎 TanShenghu tanshenghu@163.com
 * @Update: 2019-12-26
 * @Description: 商城秒杀活动
 */
import Taro, { Component } from '@tarojs/taro'
import { View, Text, Label } from '@tarojs/components'
import classnames from 'classnames';
import styles from './style';

const noop = () => {};

class RunSecond extends Component {
  constructor(props){
    super(props);
    this.state = {
      surplus: ['00', '00', '00', '00']
    }
    this.timer = null;
  }

  componentDidMount(){
    const that = this;
    const {
      deadline, // 截止时间
      onFinish = noop,
    } = this.props;

    const tm = {
      day: 86400000,
      hour: 3600000,
      minute: 60000,
      second: 1000,
    };
    clearTimeout(this.timer);
    const fill0 = v => (`${v}`.length === 1 ? `0${v}` : `${v}`);
    const loopTime = function () {
      this.timer = setTimeout(() => {
        let curNow = deadline - Date.now();
        // 天数
        const d = fill0(Math.floor(curNow / tm.day));
        curNow %= tm.day;
        // 时
        const h = fill0(Math.floor(curNow / tm.hour));
        curNow %= tm.hour;
        // 分
        const m = fill0(Math.floor(curNow / tm.minute));
        curNow %= tm.minute;
        // 秒
        const s = fill0(Math.floor(curNow / tm.second));
        const state = [`${d}`, `${h}`, `${m}`, `${s}`];
  
        that.setState({surplus: state});
        // ===
        if (state.every(item => item === '00')) {
          clearTimeout(this.timer);
          onFinish('just');
        } else if (curNow > 0) {
          loopTime();
        }
      }, 1000);
    };
  
    if (deadline && Date.now() <= deadline) {
      loopTime();
    } else {
      onFinish('past');
    }
    
  }

  render(){

    const {
      className,
      dayClassName,
      hourClassName,
      minuteClassName,
      secondClassName,
      dayStyle,
      hourStyle,
      minuteStyle,
      secondStyle,
      itemsClassName,
      style,
    } = this.props;

    const { surplus } = this.state;

    const cmap = {
      d: dayClassName,
      h: hourClassName,
      m: minuteClassName,
      s: secondClassName,
    };

    return (
      <View className={classnames(styles.run_second_box, className)} style={style}>
        {surplus[0].split('').map((vv, i) => <Text key={i+1} className={classnames(cmap.d || itemsClassName)} style={dayStyle}>{vv}</Text>)}
        <Label>天</Label>
        {surplus[1].split('').map((vv, i) => <Text key={i+1} className={classnames(cmap.h || itemsClassName)} style={hourStyle}>{vv}</Text>)}
        <Label>时</Label>
        {surplus[2].split('').map((vv, i) => <Text key={i+1} className={classnames(cmap.m || itemsClassName)} style={minuteStyle}>{vv}</Text>)}
        <Label>分</Label>
        {surplus[3].split('').map((vv, i) => <Text key={i+1} className={classnames(cmap.s || itemsClassName)} style={secondStyle}>{vv}</Text>)}
        <Label>秒</Label>
      </View>
    );
  }

}

export default RunSecond;
