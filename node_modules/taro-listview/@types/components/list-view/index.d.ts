/// <reference types="react" />
import { Component } from '@tarojs/taro';
import { initialState } from './init';
import { Props } from './type';
import './index.scss';
declare type State = Readonly<typeof initialState>;
declare class ListView extends Component<Props, State> {
    lazyClassName: string | undefined;
    lazyKey: string | undefined;
    lazyViewHeight: number;
    static options: {
        addGlobalClass: boolean;
    };
    static defaultProps: {
        lazy: boolean;
        distanceToRefresh: number;
        damping: number;
        isLoaded: boolean;
        isEmpty: boolean;
        emptyText: string;
        noMore: string;
        footerLoadingText: string;
        footerLoadedText: string;
        scrollTop: number;
        touchScrollTop: number;
        onScrollToLower: () => void;
        showIndicator: boolean;
        className: string;
        onPullDownRefresh: null;
        hasMore: boolean;
        needInit: boolean;
        isError: boolean;
        launch: {};
        renderEmpty: null;
        renderError: null;
        indicator: {
            activate: string;
            deactivate: string;
        };
    };
    scrollView: {};
    state: {
        hideInd: boolean;
        touchScrollTop: number;
        scrollTop: number;
        startY: number;
        downLoading: boolean;
        lowerLoading: boolean;
        canScrollY: boolean;
        isInit: boolean;
        blockStyle: {
            transform: string;
            transition: string;
        };
        dampText: string;
    };
    startY: number;
    needPullDown: boolean;
    touchScrollTop: number;
    componentDidMount(): void;
    componentWillUnmount(): void;
    touchEvent: (e: any) => void;
    fetchInit: () => void;
    resetLoad: (status?: number, cb?: any) => void;
    handleScrollToLower: () => void;
    getMore: () => void;
    onScroll: (e: any) => void;
    moveBox: (y: any) => void;
    updateDampText: (act: any) => "" | undefined;
    render(): JSX.Element;
}
export default ListView;
